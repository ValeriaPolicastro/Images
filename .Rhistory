library("cowplot")
library("robin")
library("gprege")
my_network <- system.file("example/football.gml", package="robin")
graph <- prepGraph(file=my_network, file.format="gml")
graphRandom <- random(graph=graph)
proc <- robinRobust(graph=graph, graphRandom=graphRandom, measure="vi",
method="louvain", type="independent")
pdf(file= "PlotRobin.pdf")
plotRobin(graph=graph, model1=proc$Mean, model2=proc$MeanRandom,
legend=c("real data", "null model"), measure="vi")
dev.off()
graph
#1
comp <- robinCompare(graph=graph, method1="infomap",
method2="fastGreedy", measure="vi", type="independent")
pdf(file= "PlotFastGreedy.pdf")
plotRobin(graph=graph, model1=comp$Mean1, model2=comp$Mean2, measure="vi",
legend=c("infomap", "fastGreedy"), title="Infomap vs FastGreedy")
dev.off()
#2
comp <- robinCompare(graph=graph, method1="infomap",
method2="walktrap", measure="vi", type="independent")
pdf(file= "PlotWalktrap.pdf")
plotRobin(graph=graph, model1=comp$Mean1, model2=comp$Mean2, measure="vi",
legend=c("infomap", "walktrap"), title="Infomap vs Walktrap")
dev.off()
#3
comp <- robinCompare(graph=graph, method1="infomap",
method2="labelProp", measure="vi", type="independent")
library("cowplot")
library("robin")
library("gprege")
my_network <- system.file("example/football.gml", package="robin")
graph <- prepGraph(file=my_network, file.format="gml")
graphRandom <- random(graph=graph)
proc <- robinRobust(graph=graph, graphRandom=graphRandom, measure="vi",
method="louvain", type="independent")
pdf(file= "PlotRobin.pdf")
plotRobin(graph=graph, model1=proc$Mean, model2=proc$MeanRandom,
legend=c("real data", "null model"), measure="vi")
pdf(file= "PlotRobin.pdf")
plotRobin(graph=graph, model1=proc$Mean, model2=proc$MeanRandom,
legend=c("real data", "null model"), measure="vi")
dev.off()
library("cowplot")
pdf(file= "PlotRobin.pdf")
plotRobin(graph=graph, model1=proc$Mean, model2=proc$MeanRandom,
legend=c("real data", "null model"), measure="vi")
dev.off()
detach("package:cowplot", unload = TRUE)
library(cowplot)
theme_set(theme_cowplot())
theme_cowplot()
library("cowplot")
#1
comp <- robinCompare(graph=graph, method1="infomap",
method2="fastGreedy", measure="vi", type="independent")
pdf(file= "PlotFastGreedy.pdf")
plotRobin(graph=graph, model1=comp$Mean1, model2=comp$Mean2, measure="vi",
legend=c("infomap", "fastGreedy"), title="Infomap vs FastGreedy")
dev.off()
#2
comp <- robinCompare(graph=graph, method1="infomap",
method2="walktrap", measure="vi", type="independent")
pdf(file= "PlotWalktrap.pdf")
plotRobin(graph=graph, model1=comp$Mean1, model2=comp$Mean2, measure="vi",
legend=c("infomap", "walktrap"), title="Infomap vs Walktrap")
dev.off()
#3
comp <- robinCompare(graph=graph, method1="infomap",
method2="labelProp", measure="vi", type="independent")
pdf(file= "PlotLabelProp.pdf")
plotRobin(graph=graph, model1=comp$Mean1, model2=comp$Mean2, measure="vi",
legend=c("infomap", "labelProp"), title="Infomap vs LabelProp")
dev.off()
#4
comp <- robinCompare(graph=graph, method1="infomap",
method2="leadingEigen", measure="vi", type="independent")
pdf(file= "PlotLeadingEigen.pdf")
plotRobin(graph=graph, model1=comp$Mean1, model2=comp$Mean2, measure="vi",
legend=c("infomap", "leadingEigen"), title="Infomap vs LeadingEigen")
dev.off()
#5
comp <- robinCompare(graph=graph, method1="infomap",
method2="louvain", measure="vi", type="independent")
pdf(file= "PlotLouvain.pdf")
plotRobin(graph=graph, model1=comp$Mean1, model2=comp$Mean2, measure="vi",
legend=c("infomap", "louvain"), title="Infomap vs Louvain")
dev.off()
#6
comp <- robinCompare(graph=graph, method1="infomap",
method2="edgeBetweenness", measure="vi", type="independent")
pdf(file= "PlotEdgeBetwenness.pdf")
plotRobin(graph=graph, model1=comp$Mean1, model2=comp$Mean2, measure="vi",
legend=c("infomap", "edgeBetweenness"), title="Infomap vs EdgeBetweenness")
dev.off()
#7
comp <- robinCompare(graph=graph, method1="infomap",
method2="spinglass", measure="vi", type="independent")
pdf(file= "PlotSpinglass.pdf")
plotRobin(graph=graph, model1=comp$Mean1, model2=comp$Mean2, measure="vi",
legend=c("infomap", "spinglass"), title="Infomap vs Spinglass")
dev.off()
#1
comp <- robinCompare(graph=graph, method1="infomap",
method2="fastGreedy", measure="vi", type="independent")
library("cowplot")
library("robin")
my_network <- system.file("example/football.gml", package="robin")
graph <- prepGraph(file=my_network, file.format="gml")
graphRandom <- random(graph=graph)
proc <- robinRobust(graph=graph, graphRandom=graphRandom, measure="vi",
method="louvain", type="independent")
pdf(file= "PlotRobin.pdf")
plotRobin(graph=graph, model1=proc$Mean, model2=proc$MeanRandom,
legend=c("real data", "null model"), measure="vi")
dev.off()
#1
comp <- robinCompare(graph=graph, method1="infomap",
method2="fastGreedy", measure="vi", type="independent")
comp
write.table(comp,file="FastGreedy.txt")
comp
write.csv2(comp,file="FastGreedy.csv")
write.table(comp$Mean1,file="Infomap.csv")
write.table(comp$Mean1,file="Infomap.txt")
read.table(file = "Infomap.txt")
setwd("~/Dropbox/CNR Tigem/Tutto per ROBIN/Paper-Robin/Figures Paper")
read.table(file = "Infomap.txt")
comp$ratios1vs2
comp$ratios1vs2
graph <- prepGraph(file=my_network, file.format="gml")
graph
write_graph(graph, file="footballedgelist.txt", format = "edgelist")
plotGraph(graph)
graph.e <- prepGraph(file="footballedgelist.txt", file.format="edgelist")
plotGraph(graph.e)
graph.e <- prepGraph(file="ckpk_footballedgelist.txt", file.format="edgelist")
setwd("~/Dropbox/CNR Tigem/Tutto per ROBIN/RandNetGen-master")
graph.e <- prepGraph(file="ckpk_footballedgelist.txt", file.format="edgelist")
plotGraph(graph.e)
proc <- robinRobust(graph=graph, graphRandom=graph.e, measure="vi",
method="infomap", type="independent")
plotRobin(graph=graph, model1=proc$Mean, model2=proc$MeanRandom,
legend=c("real data", "null model"), measure="vi")
proc$Mean
proc$MeanRandom
graph.e <- prepGraph(file="dk2.5_footballedgelist.txt", file.format="edgelist")
plotGraph(graph.e)
proc <- robinRobust(graph=graph, graphRandom=graph.e, measure="vi",
method="infomap", type="independent")
plotRobin(graph=graph, model1=proc$Mean, model2=proc$MeanRandom,
legend=c("real data", "null model"), measure="vi")
my_network <- system.file("example/football.gml", package="robin")
graph <- prepGraph(file=my_network, file.format="gml")
graphRandom <- random(graph=graph)
proc <- robinRobust(graph=graph, graphRandom=graphRandom, measure="vi",
method="infomap", type="independent")
plotRobin(graph=graph, model1=proc$Mean, model2=proc$MeanRandom,
legend=c("real data", "null model"), measure="vi")
proc <- robinRobust(graph=graph, graphRandom=graph.e, measure="vi",
method="labelprop", type="independent")
proc <- robinRobust(graph=graph, graphRandom=graph.e, measure="vi",
method="labelProp", type="independent")
plotRobin(graph=graph, model1=proc$Mean, model2=proc$MeanRandom,
legend=c("real data", "null model"), measure="vi")
proc <- robinRobust(graph=graph, graphRandom=graph.e, measure="vi",
method="infomap", type="independent")
plotRobin(graph=graph, model1=proc$Mean, model2=proc$MeanRandom,
legend=c("real data", "null model"), measure="vi")
proc$ratios
robinGPTest(proc$ratios)
robinGPTest(comp$ratios1vs2)
robinGPTest(comp$ratios1vs2)
robinFDATest(graph=graph, model1=comp$Mean1, model2=comp$Mean2, measure="vi")
BF<-robinGPTest(comp$ratios1vs2)
BF<-robinGPTest(comp$ratios1vs2)
write.table(BF,file = "BF.txt")
robinGPTest(comp$ratios1vs2)
#1
comp <- robinCompare(graph=graph, method1="infomap",
method2="fastGreedy", measure="vi", type="independent")
plotRobin(graph=graph, model1=comp$Mean1, model2=comp$Mean2, measure="vi", title="Infomap vs FastGreedy")
plot<-plotRobin(graph=graph, model1=comp$Mean1, model2=comp$Mean2, measure="vi", title="Infomap vs FastGreedy")
plot + scale_fill_discrete(name = "Dose", labels = c("A", "B", "C"))
plot + scale_fill_discrete(name = "Dose", labels = c("A", "B"))
library(ggplot2)
plot + scale_fill_discrete(name = "Dose", labels = c("A", "B"))
plot +
scale_color_manual(values = c("#999999", "#E69F00"))
plot +
scale_color_manual(values = c("red", "blu"))
plot +
scale_color_manual(values = c("red", "blue"))
plot +
scale_color_manual(values = c("pink", "lightblue"))
plot +
scale_color_manual(values = c("pink", "blue"))
plot +
scale_color_manual(values = c("darkpink", "lightblue"))
plot +
scale_color_manual(values = c("pink", "lightblue"))
plot +
scale_color_manual(values = c("red", "blue"))
plot +
scale_color_manual(values = c("#00AFBB, "blue"))
plot +
scale_color_manual(values = c("#00AFBB", "blue"))
plot +
scale_color_manual(values = c("#CC79A7","#00AFBB"))
plot +
scale_color_manual(values = c("#CC79A8","#00AFBB"))
plot +
scale_color_manual(values = c("#CC79A9","#00AFBB"))
plot +
scale_color_manual(values = c("#CC79B9","#00AFBB"))
plot +
scale_color_manual(values = c("#CC79D9","#00AFBB"))
plot +
scale_color_manual(values = c("#CC89D9","#00AFBB"))
plot +
scale_color_manual(values = c("#CD89D9","#00AFBB"))
plot +
scale_color_manual(values = c("#DD89D9","#00AFBB"))
plot +
scale_color_manual(values = c("#EE89D9","#00AFBB"))
plot +
scale_color_manual(values = c("#FF89D9","#00AFBB"))
plot +
scale_color_manual(values = c("#GG89D9","#00AFBB"))
col2rgb()
?col2rgb()
?col2rgb("blu")
col2rgb("blu")
plot +
scale_color_manual(values = c("#FF9999","#00AFBB"))
#1
comp <- robinCompare(graph=graph, method1="infomap",
method2="fastGreedy", measure="vi", type="independent")
plot<-plotRobin(graph=graph, model1=comp$Mean1, model2=comp$Mean2, measure="vi",
legend=c("infomap", "fastgreedy"),title="Infomap vs FastGreedy")
plot+ scale_color_manual(values = c("#FF9999","#00AFBB"))+scale_y_continuous(limits=c(0,0.6))
plot+ scale_color_manual(values = c("#FF9999","#00AFBB"))+scale_y_continuous(limits=c(0,0.6))
plot+ scale_color_manual(values = c("#00AFBB","#FF9999"))+scale_y_continuous(limits=c(0,0.6))
#5
comp <- robinCompare(graph=graph, method1="infomap",
method2="louvain", measure="vi", type="independent")
plot<-plotRobin(graph=graph, model1=comp$Mean1, model2=comp$Mean2, measure="vi",
legend=c("infomap", "louvain"), title="Infomap vs Louvain")
plot
plot+ scale_color_manual(values = c("#00AFBB","#FF9999"))+scale_y_continuous(limits=c(0,0.6))
plotRobin <- function(graph,
model1,
model2,
measure= c("vi", "nmi","split.join", "adjusted.rand"),
legend=c("model1", "model2"),
title="Robin plot")
{
measure <- match.arg (measure)
if(measure=="vi")
{
N <- igraph::vcount(graph)
mvimodel1 <- cbind(as.vector((apply(model1, 2, mean))/log2(N)),legend[1])
mvimodel2 <- cbind(as.vector((apply(model2, 2, mean))/log2(N)),legend[2])
}else if(measure=="split.join")
{
N <- igraph::vcount(graph)
mvimodel1 <- cbind(as.vector((apply(model1, 2, mean))/(2*N)),legend[1])
mvimodel2 <- cbind(as.vector((apply(model2, 2, mean))/(2*N)),legend[2])
}else
{
mvimodel1 <- cbind(as.vector((apply(model1, 2, mean))), legend[1])
mvimodel2 <- cbind(as.vector((apply(model2, 2, mean))), legend[2])
}
percPert <- rep((seq(0,60,5)/100), 2)
model <- mvimodel2
mvi <- rbind(mvimodel1, model)
colnames(mvi) <- c("mvi", "model")
dataFrame <- data.frame(percPert, mvi)
plot <- ggplot2::ggplot(dataFrame, aes(x=percPert,
y=as.numeric(as.character(mvi)),
colour=model,
group=factor(model)))+
geom_line()+
geom_point()+
xlab("Percentage of perturbation") +
ylab("Measure") +
ggtitle(title)
+scale_y_continuous(limits=c(0,0.6))
+ scale_color_manual(values=c("#00AFBB","#FF9999"))
return(plot)
}
plot<-plotRobin(graph=graph, model1=comp$Mean1, model2=comp$Mean2, measure="vi",title="Infomap vs FastGreedy")
plotRobin <- function(graph,
model1,
model2,
measure= c("vi", "nmi","split.join", "adjusted.rand"),
legend=c("model1", "model2"),
title="Robin plot")
{
measure <- match.arg (measure)
if(measure=="vi")
{
N <- igraph::vcount(graph)
mvimodel1 <- cbind(as.vector((apply(model1, 2, mean))/log2(N)),legend[1])
mvimodel2 <- cbind(as.vector((apply(model2, 2, mean))/log2(N)),legend[2])
}else if(measure=="split.join")
{
N <- igraph::vcount(graph)
mvimodel1 <- cbind(as.vector((apply(model1, 2, mean))/(2*N)),legend[1])
mvimodel2 <- cbind(as.vector((apply(model2, 2, mean))/(2*N)),legend[2])
}else
{
mvimodel1 <- cbind(as.vector((apply(model1, 2, mean))), legend[1])
mvimodel2 <- cbind(as.vector((apply(model2, 2, mean))), legend[2])
}
percPert <- rep((seq(0,60,5)/100), 2)
model <- mvimodel2
mvi <- rbind(mvimodel1, model)
colnames(mvi) <- c("mvi", "model")
dataFrame <- data.frame(percPert, mvi)
plot <- ggplot2::ggplot(dataFrame, aes(x=percPert,
y=as.numeric(as.character(mvi)),
colour=model,
group=factor(model)))+
geom_line()+
geom_point()+
xlab("Percentage of perturbation") +
ylab("Measure") +
ggtitle(title)+
scale_y_continuous(limits=c(0,0.6))+
scale_color_manual(values=c("#00AFBB","#FF9999"))
return(plot)
}
plot<-plotRobin(graph=graph, model1=comp$Mean1, model2=comp$Mean2, measure="vi",
legend=c("infomap", "fastgreedy"),title="Infomap vs FastGreedy")
plot
plot<-plotRobin(graph=graph, model1=comp$Mean1, model2=comp$Mean2, measure="vi",title="Infomap vs FastGreedy")
plot
plot<-plotRobin(graph=graph, model1=comp$Mean1, model2=comp$Mean2, measure="vi",title="Infomap vs FastGreedy")
plot
plotRobin <- function(graph,
model1,
model2,
measure= c("vi", "nmi","split.join", "adjusted.rand"),
legend=c("model1", "model2"),
title="Robin plot")
{
measure <- match.arg (measure)
if(measure=="vi")
{
N <- igraph::vcount(graph)
mvimodel1 <- cbind(as.vector((apply(model1, 2, mean))/log2(N)),legend[1])
mvimodel2 <- cbind(as.vector((apply(model2, 2, mean))/log2(N)),legend[2])
}else if(measure=="split.join")
{
N <- igraph::vcount(graph)
mvimodel1 <- cbind(as.vector((apply(model1, 2, mean))/(2*N)),legend[1])
mvimodel2 <- cbind(as.vector((apply(model2, 2, mean))/(2*N)),legend[2])
}else
{
mvimodel1 <- cbind(as.vector((apply(model1, 2, mean))), legend[1])
mvimodel2 <- cbind(as.vector((apply(model2, 2, mean))), legend[2])
}
percPert <- rep((seq(0,60,5)/100), 2)
model <- mvimodel2
mvi <- rbind(mvimodel1, model)
colnames(mvi) <- c("mvi", "model")
dataFrame <- data.frame(percPert, mvi)
plot <- ggplot2::ggplot(dataFrame, aes(x=percPert,
y=as.numeric(as.character(mvi)),
colour=model,
group=factor(model)))+
geom_line()+
geom_point()+
xlab("Percentage of perturbation") +
ylab("Measure") +
ggtitle(title)+
scale_y_continuous(limits=c(0,0.6))+
#scale_color_manual(values=c("#00AFBB","#FF9999"))
return(plot)
}
plot<-plotRobin(graph=graph, model1=comp$Mean1, model2=comp$Mean2, measure="vi",title="Infomap vs FastGreedy")
plot
#library("cowplot")
library("robin")
plot<-plotRobin(graph=graph, model1=comp$Mean1, model2=comp$Mean2, measure="vi",title="Infomap vs FastGreedy")
plot
library(devtools)
install_github("ValeriaPolicastro/robin",force=TRUE)
plot+scale_color_manual(values=c("#00AFBB","indianred2"))
plot+scale_color_manual(values=c("#00AFBB","indianred"))
plot+scale_color_manual(values=c("#00AFBB","indianred3"))
comp <- robinCompare(graph=graph, method1="infomap",
method2="fastGreedy", measure="vi", type="independent")
plot<-plotRobin(graph=graph, model1=comp$Mean1, model2=comp$Mean2,
measure="vi", legend=c("infomap","fastgreedy"),
title="Infomap vs FastGreedy")
plot
plotRobin(graph=graph, model1=comp$Mean1, model2=comp$Mean2,
measure="vi", legend=c("infomap","fastgreedy"),
title="Infomap vs FastGreedy")
plotRobin(graph=graph, model1=comp$Mean1, model2=comp$Mean2,
measure="vi", legend=c("infomap","fastgreedy"),
measure="vi", legend=c("infomap","fastgreedy"),
title="Infomap vs FastGreedy")
plotRobin(graph=graph, model1=comp$Mean1, model2=comp$Mean2,
measure="vi", legend=c("infomap","fastgreedy"),
title="Infomap vs FastGreedy")
plotRobin(graph=graph, model1=comp$Mean1, model2=comp$Mean2,
measure="vi", legend=c("infomap","fastgreedy"),
title="Infomap vs FastGreedy")
